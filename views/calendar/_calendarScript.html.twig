<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script>
<script>
    const calendarEl = document.getElementById("calendar");
    document.addEventListener("DOMContentLoaded", () => {

        const calendar = new FullCalendar.Calendar(calendarEl, {
            customButtons: {
                newEvent: {
                    text: "+",
                    click: () => {
                        const modalCreateEvent = document.getElementById("modalCreateEvent")
                        const start_select = document.getElementById("start_select")
                        const end_select = document.getElementById("end_select")
                        const allDay_select = document.getElementById("allDay_select")
                        delete start_select.value
                        delete end_select.value
                        delete allDay_select.value
                        modalCreateEvent.showModal()
                    }
                }
            },
            headerToolbar: {
                left: "prev,next today newEvent",
                center: "title",
                right: "dayGridMonth,timeGridWeek,timeGridDay",
            },
            buttonText: {
                today: "Aujourd'hui",
                dayGridMonth: "Mois",
                timeGridWeek: "Semaine",
                timeGridDay: "Jour",
            },
            views: {
                dayGrid: {
                    // options apply to dayGridMonth, dayGridWeek, and dayGridDay views
                },
                timeGrid: {
                    // options apply to timeGridWeek and timeGridDay views
                },
                week: {
                    // options apply to dayGridWeek and timeGridWeek views
                },
                day: {
                    // options apply to dayGridDay and timeGridDay views
                },
            },
            locale: "fr",
            initialView: "timeGridWeek",
            weekNumberCalculation: "ISO",
            weekNumbers: true,
            weekText: "S",
            weekTextLong: "Semaine",
            allDayContent: "Jour",
            scrollTime: "09:00",
            selectable: true,
            select: (info) => {
                const allDay = info.allDay
                if (!allDay) {
                    const startDate = info.startStr.slice(0, -6)
                    const endDate = info.endStr.slice(0, -6)
                    openModal(startDate, endDate, allDay);
                } else {
                    const startDate = info.startStr
                    const endDate = info.endStr
                    openModal(startDate, endDate, allDay);
                }
            },
            eventClick: (info) => {
                alert(info.event.id)
            },
            eventSources: [
                {
                    url: "/get-trainings-events",
                    classNames: ["training-event"]
                },
                {
                    url: "/get-matches-events",
                    classNames: ["match-event"]
                }

            ]
        });

        calendar.render();

        document.addEventListener("htmx:afterSwap", (event) => {
            if (event.detail.target.id === "modalCreateEvent") {
                const allDayCheckbox = document.getElementById("allDayCheckbox");
                const startInput = document.getElementById("startInput");
                const endInput = document.getElementById("endInput");
                if (allDayCheckbox && startInput && endInput) {
                    const updateInputTypes = () => {
                        if (allDayCheckbox.checked) {
                            startInput.value = ""
                            endInput.value = ""
                            startInput.type = "date";
                            endInput.type = "date";
                        } else {
                            startInput.value = ""
                            endInput.value = ""
                            startInput.type = "datetime-local";
                            endInput.type = "datetime-local";
                        }
                    };
                    allDayCheckbox.addEventListener("change", updateInputTypes);
                }
            }
        });

        document.addEventListener("htmx:afterRequest", (event) => {
            if (event.detail.xhr.status === 201) {
                calendar.refetchEvents()
            }
        });

        const openModal = (startDate, endDate, allDay) => {
            const modalCreateEvent = document.getElementById("modalCreateEvent")
            const start_select = document.getElementById("start_select")
            const end_select = document.getElementById("end_select")
            const allDay_select = document.getElementById("allDay_select")
            start_select.value = startDate
            end_select.value = endDate
            allDay_select.value = allDay
            modalCreateEvent.showModal()
        }

    });
</script>
